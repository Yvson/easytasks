# Generated by Django 3.2.9 on 2021-11-09 00:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conta', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acceleration',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('cm_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('cm_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_h2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_min2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('g', models.DecimalField(decimal_places=150, max_digits=300)),
                ('gal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_h2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_min2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('lea_h2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('lea_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_h2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_min2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_h2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_min2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_us2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_min2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_ms2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_ns2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_s2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_us2', models.DecimalField(decimal_places=150, max_digits=300)),
            ],
            options={
                'verbose_name': 'Acceleration',
                'verbose_name_plural': 'Acceleration',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('acre', models.DecimalField(decimal_places=150, max_digits=300)),
                ('angstrom_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ano_luz_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('attometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centimetro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decimetro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('exametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('femtometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('gigametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('hectare', models.DecimalField(decimal_places=150, max_digits=300)),
                ('hectometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('jardas_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('megametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('metro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('micrometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milha_nautica_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milhas_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milimetro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nanometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('parsec_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pe_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('petametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('picometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('polegadas_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('terametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('unidade_astronomica_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yoctometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yottametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zeptometro_2', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zettametro_2', models.DecimalField(decimal_places=150, max_digits=300)),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Area',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Force',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('attonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centinewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decagrama_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decanewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decigrama_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decinewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('dina', models.DecimalField(decimal_places=150, max_digits=300)),
                ('exanewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('femtonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('giganewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('grama_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('hectonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('joule_metro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('kip', models.DecimalField(decimal_places=150, max_digits=300)),
                ('libra_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('meganewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('megapond', models.DecimalField(decimal_places=150, max_digits=300)),
                ('micronewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milinewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nanonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('newton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('onca_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('petanewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('piconewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pond', models.DecimalField(decimal_places=150, max_digits=300)),
                ('poundal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilograma_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilopond', models.DecimalField(decimal_places=150, max_digits=300)),
                ('sthene', models.DecimalField(decimal_places=150, max_digits=300)),
                ('teranewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('tonelada_forca', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yoctonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yottanewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zeptonewton', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zettanewton', models.DecimalField(decimal_places=150, max_digits=300)),
            ],
            options={
                'verbose_name': 'Force',
                'verbose_name_plural': 'Force',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Length',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('angstrom', models.DecimalField(decimal_places=80, max_digits=150)),
                ('ano_luz', models.DecimalField(decimal_places=80, max_digits=150)),
                ('attometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('centimetro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('decametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('decimetro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('exametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('femtometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('gigametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('hectometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('jardas', models.DecimalField(decimal_places=80, max_digits=150)),
                ('megametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('metro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('micrometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('milha', models.DecimalField(decimal_places=80, max_digits=150)),
                ('milha_nautica', models.DecimalField(decimal_places=80, max_digits=150)),
                ('milimetro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('nanometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('parsec', models.DecimalField(decimal_places=80, max_digits=150)),
                ('pe', models.DecimalField(decimal_places=80, max_digits=150)),
                ('petametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('picometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('polegada', models.DecimalField(decimal_places=80, max_digits=150)),
                ('quilometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('terametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('unidade_astronomica', models.DecimalField(decimal_places=80, max_digits=150)),
                ('yoctometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('yottametro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('zeptometro', models.DecimalField(decimal_places=80, max_digits=150)),
                ('zettametro', models.DecimalField(decimal_places=80, max_digits=150)),
            ],
            options={
                'verbose_name': 'Length',
                'verbose_name_plural': 'Length',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Mass',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('attograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('centigrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('dalton', models.DecimalField(decimal_places=80, max_digits=150)),
                ('decagrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('decigrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('exagrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('femtograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('gigagrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('grama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('hectograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('libra', models.DecimalField(decimal_places=80, max_digits=150)),
                ('megagrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('micrograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('miligrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('nanograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('onca', models.DecimalField(decimal_places=80, max_digits=150)),
                ('onca_troy', models.DecimalField(decimal_places=80, max_digits=150)),
                ('petagrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('picograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('quilograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('slug', models.DecimalField(decimal_places=80, max_digits=150)),
                ('stone', models.DecimalField(decimal_places=80, max_digits=150)),
                ('teragrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('tonelada', models.DecimalField(decimal_places=80, max_digits=150)),
                ('tonelada_curta', models.DecimalField(decimal_places=80, max_digits=150)),
                ('tonelada_longa', models.DecimalField(decimal_places=80, max_digits=150)),
                ('yoctograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('yottagrama', models.DecimalField(decimal_places=80, max_digits=150)),
                ('zeptograma', models.DecimalField(decimal_places=80, max_digits=150)),
                ('zettagrama', models.DecimalField(decimal_places=80, max_digits=150)),
            ],
            options={
                'verbose_name': 'Mass',
                'verbose_name_plural': 'Mass',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Pressure',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('atmosfera_padrao', models.DecimalField(decimal_places=150, max_digits=300)),
                ('atmosfera_tecnico', models.DecimalField(decimal_places=150, max_digits=300)),
                ('attobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('attopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('bar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('barad', models.DecimalField(decimal_places=150, max_digits=300)),
                ('barye', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centibar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centihg', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centimetro_de_agua_4_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centimetro_de_mercurio_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centipascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centitorr', models.DecimalField(decimal_places=150, max_digits=300)),
                ('coluna_de_agua_centimetro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('coluna_de_agua_milimetro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('coluna_de_agua_polegada', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decibar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decipascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decitorr', models.DecimalField(decimal_places=150, max_digits=300)),
                ('dina_centimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('exabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('exapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('femtobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('femtopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('gigabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('gigapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('grama_forca_centimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('hectobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('hectopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('kip_pe_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('kip_polegada_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('libra_pe_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('libra_polegada_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('megabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('meganewton_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('megapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('metro_de_ar_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('metro_de_ar_15_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('microbar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('micrometro_de_agua_4_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('micrometro_de_mercurio_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('micropascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milibar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milihg', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milimetro_de_agua_4_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milimetro_de_mercurio_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milipascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('militorr', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nanobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nanopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('newton_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('newton_milimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('onca_polegada_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pe_de_agua_4_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pe_de_ar_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pe_de_ar_15_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pe_de_mercurio_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('petabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('petapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('picobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('picopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pieze', models.DecimalField(decimal_places=150, max_digits=300)),
                ('polegada_de_agua_4_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('polegada_de_ar_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('polegada_de_ar_15_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('polegada_de_mercurio_0_C', models.DecimalField(decimal_places=150, max_digits=300)),
                ('poundal_pe_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilograma_forca_centimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilograma_forca_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilograma_forca_milimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilonewton_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilopond_centimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilopond_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilopond_milimetro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('sthene_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('terabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('terapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('tonelada_curta_pe_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('tonelada_curta_polegada_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('tonelada_longa_pe_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('tonelada_longa_polegada_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('tonelada_metro_ao_quadrado', models.DecimalField(decimal_places=150, max_digits=300)),
                ('torr', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yoctobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yoctopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yottabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yottapascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zeptobar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zeptopascal', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zettabar', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zettapascal', models.DecimalField(decimal_places=150, max_digits=300)),
            ],
            options={
                'verbose_name': 'Pressure',
                'verbose_name_plural': 'Pressure',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('kelvin', models.CharField(max_length=100)),
                ('celsius', models.CharField(max_length=100)),
                ('fahrenheit', models.CharField(max_length=100)),
                ('rankine', models.CharField(max_length=100)),
                ('reaumur', models.CharField(max_length=100)),
                ('romer', models.CharField(max_length=100)),
                ('newton', models.CharField(max_length=100)),
                ('delisle', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Temperature',
                'verbose_name_plural': 'Temperature',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('ano', models.DecimalField(decimal_places=80, max_digits=150)),
                ('attosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('centisegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('decasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('decisegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('dia', models.DecimalField(decimal_places=80, max_digits=150)),
                ('exasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('femtosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('gigasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('hectosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('hora', models.DecimalField(decimal_places=80, max_digits=150)),
                ('megasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('mes', models.DecimalField(decimal_places=80, max_digits=150)),
                ('microsegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('milisegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('minuto', models.DecimalField(decimal_places=80, max_digits=150)),
                ('nanosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('petasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('picosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('quilosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('segundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('semana', models.DecimalField(decimal_places=80, max_digits=150)),
                ('terasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('yoctosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('yottasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('zeptosegundo', models.DecimalField(decimal_places=80, max_digits=150)),
                ('zettasegundo', models.DecimalField(decimal_places=80, max_digits=150)),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Time',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Velocity',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('cm_h', models.DecimalField(decimal_places=150, max_digits=300)),
                ('cm_min', models.DecimalField(decimal_places=150, max_digits=300)),
                ('cm_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('cm_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_h', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_min', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ft_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('in_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_h', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_min', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('km_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('lea_h', models.DecimalField(decimal_places=150, max_digits=300)),
                ('lea_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_h', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_min', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('m_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_h', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_min', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mi_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mm_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nm_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('um_us', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_min', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_ms', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_ns', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_s', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yd_us', models.DecimalField(decimal_places=150, max_digits=300)),
            ],
            options={
                'verbose_name': 'Velocity',
                'verbose_name_plural': 'Velocity',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=100)),
                ('angstrom_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('ano_luz_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('attometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centilitro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('centimetro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('colher_de_cha_americana', models.DecimalField(decimal_places=150, max_digits=300)),
                ('colher_de_cha_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('colher_de_sopa_americana', models.DecimalField(decimal_places=150, max_digits=300)),
                ('colher_de_sopa_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decilitro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('decimetro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('exametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('femtometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('galao_americano', models.DecimalField(decimal_places=150, max_digits=300)),
                ('galao_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('gigametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('hectometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('jardas_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('litro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('megametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('metro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('micrometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milha_nautica_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milhas_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('mililitro', models.DecimalField(decimal_places=150, max_digits=300)),
                ('milimetro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('nanometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('onca_liquida_americana', models.DecimalField(decimal_places=150, max_digits=300)),
                ('onca_liquida_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('parsec_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('pe_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('petametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('picometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('polegadas_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quartilho_americano', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quartilho_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quarto_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quarto_liquido_americano', models.DecimalField(decimal_places=150, max_digits=300)),
                ('quilometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('terametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('unidade_astronomica_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('xicara_americana', models.DecimalField(decimal_places=150, max_digits=300)),
                ('xicara_imperial', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yoctometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('yottametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zeptometro_3', models.DecimalField(decimal_places=150, max_digits=300)),
                ('zettametro_3', models.DecimalField(decimal_places=150, max_digits=300)),
            ],
            options={
                'verbose_name': 'Volume',
                'verbose_name_plural': 'Volume',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Conversion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('unit_from', models.CharField(max_length=50)),
                ('unit_to', models.CharField(max_length=50)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversions', to='conta.profile')),
            ],
            options={
                'verbose_name': 'Conversion',
                'verbose_name_plural': 'Conversions',
                'ordering': ['-date'],
            },
        ),
    ]
